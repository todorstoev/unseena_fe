import { vneslint } from '@ventsislavnikolov/eslint-config';

export default vneslint(
  [
    {
      ignores: ['playwright.config.ts'],
    },
    {
      files: [
        '**/app/**/*.ts',
        '**/app/**/*.tsx',
        '**/store/**/*.ts',
        '**/store/**/*.tsx',
        '**/components/**/*.ts',
        '**/components/**/*.tsx',
        '**/providers/**/*.ts',
        '**/providers/**/*.tsx',
        '**/utils/**/*.ts',
        '**/utils/**/*.tsx',
        'middleware.ts',
      ],
      rules: {
        '@typescript-eslint/consistent-type-assertions': 'off',
        '@typescript-eslint/consistent-type-definitions': 'off',
        '@typescript-eslint/no-confusing-void-expression': 'off',
        '@typescript-eslint/no-floating-promises': 'off',
        '@typescript-eslint/no-redundant-type-constituents': 'off',
        '@typescript-eslint/no-unsafe-argument': 'off',
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-call': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unsafe-return': 'off',
        '@typescript-eslint/no-useless-template-literals': 'off',
        '@typescript-eslint/padding-line-between-statements': 'off',
        '@typescript-eslint/require-await': 'off',
        'classnames-order': 'off',
        complexity: ['error', 30], // default is 20
        'func-names': 'off',
        'func-style': 'off',
        'id-length': 'off',
        'import/no-default-export': 'off',
        'jsx-a11y/html-has-lang': 'off',
        'lodash/prefer-lodash-method': 'off',
        'lodash/prefer-noop': 'off',
        'max-depth': ['error', 6], // default is 4
        'max-lines-per-function': ['error', 300], // default is 200
        'max-nested-callbacks': ['error', 6], // default is 3
        'max-statements': 'off',
        'no-negated-condition': 'off',
        'no-param-reassign': 'off',
        'no-process-env': 'off',
        'no-restricted-syntax': 'off',
        'no-unneeded-ternary': 'off',
        'react/function-component-definition': 'off',
        'react/jsx-no-leaked-render': 'off',
        'react/jsx-sort-props': 'off',
        'react/no-array-index-key': 'off',
        'react/no-danger': 'off',
        'react/no-object-type-as-default-prop': 'off',
        'react/prefer-read-only-props': 'off',
        'react/prop-types': 'off',
        'react/self-closing-comp': 'off',
        'react/style-prop-object': 'off',
        'sort-keys/sort-keys-fix': 'off',
        'tailwindcss/classnames-order': 'off',
        'tailwindcss/no-custom-classname': 'off',
        'unicorn/better-regex': 'off',
        'unicorn/filename-case': 'off',
        'unicorn/no-array-for-each': 'off',
        'unicorn/no-await-expression-member': 'off',
        'unicorn/prefer-logical-operator-over-ternary': 'off',
        'unicorn/prefer-optional-catch-binding': 'off',
        'unicorn/prefer-spread': 'off',
        'unicorn/prefer-string-slice': 'off',
      },
    },
    {
      files: [
        'env.js',
        '*.config.ts',
        '*.config.js',
        'global.d.ts',
        'jest.setup.js',
        'next.config.js',
        'postcss.config.cjs',
        'sentry.edge.config.ts',
        'sentry.client.config.ts',
        'sentry.server.config.ts',
      ],
      rules: {
        '@typescript-eslint/consistent-type-definitions': 'off',
        'import/no-anonymous-default-export': 'off',
        'import/no-default-export': 'off',
        'import/no-unassigned-import': 'off',
        'lodash/prefer-constant': 'off',
        'n/no-extraneous-import': 'off',
        'n/no-unpublished-import': 'off',
        'no-magic-numbers': 'off',
        'no-process-env': 'off',
        'no-restricted-syntax': 'off',
        'no-undef': 'off',
        'require-await': 'off',
        'sort-keys/sort-keys-fix': 'off',
        'unicorn/no-zero-fractions': 'off',
      },
    },
    {
      files: [
        '**/tests/**/*.test.ts',
        '**/tests/**/*.test.tsx',
        '**/tests/**/*.spec.ts',
        '**/tests/**/*.spec.tsx',
      ],
      rules: {
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/require-await': 'off',
        'import/no-unassigned-import': 'off',
        'jest-dom/prefer-in-document': 'off',
        'jest/no-disabled-tests': 'off',
        'lodash/prefer-noop': 'off',
        'max-statements-per-line': 'off',
        'no-restricted-syntax': 'off',
        'playwright/expect-expect': 'off',
        'react/style-prop-object': 'off',
      },
    },
    {
      files: ['**/stories/**/*.stories.ts', '**/stories/**/*.stories.tsx'],
      rules: {
        'import/no-default-export': 'off',
        'lodash/prefer-noop': 'off',
        'no-restricted-syntax': 'off',
        'react/self-closing-comp': 'off',
        'sort-keys/sort-keys-fix': 'off',
      },
    },
  ],
  {
    compat: true,
    jest: true,
    jestDom: true,
    lodash: true,
    next: true,
    playwright: true,
    prettier: true,
    react: true,
    sortKeys: true,
    storybook: false,
    tailwind: true,
    testingLibrary: true,
    typescript: true,
    typescriptTypecheck: true,
    vitest: false,
  },
);
